/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.7/userguide/java_library_plugin.html
 */
 
plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
	id 'eclipse'
}

dependencies {
	// https://mvnrepository.com/artifact/org.apache.poi/poi
	testCompile group: 'org.apache.poi', name: 'poi', version: '3.9'
	// https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml
	testCompile group: 'org.apache.poi', name: 'poi-ooxml', version: '3.9'
	// https://mvnrepository.com/artifact/com.github.2gis.winium/winium-webdriver
	testCompile group: 'com.github.2gis.winium', name: 'winium-webdriver', version: '0.1.0-1'
	// https://mvnrepository.com/artifact/net.schmizz/sshj
	testCompile group: 'net.schmizz', name: 'sshj', version: '0.10.0'
	testCompile('io.appium:java-client:2.0.0')
	// Work around for sikulixapi
	testCompile ('com.sikulix:sikulixapi:1.1.0') {
        exclude module: '${sikulix.libs}'
    }
    switch(System.getProperty('os.name').toLowerCase().split()[0]) {
        case 'windows':
            testCompile group: 'com.sikulix', name: 'sikulixlibswin', version: '1.1.0'
            break
        case 'linux':
            testCompile group: 'com.sikulix', name: 'sikulixlibslux', version: '1.1.0'
            break
        case 'mac':
            testCompile group: 'com.sikulix', name: 'sikulixlibsmac', version: '1.1.0' // MAC
            break
        default:
            throw new Exception('Unknown OS')
    }

    // https://mvnrepository.com/artifact/org.testng/testng
	testCompile group: 'org.testng', name: 'testng', version: '6.14.3'
	// https://mvnrepository.com/artifact/log4j/log4j
	testCompile group: 'log4j', name: 'log4j', version: '1.2.17'
}

// In this section you declare where to find the dependencies of your project
repositories {
	// You can declare any Maven/Ivy/file repository here.
    mavenCentral()
	// Use jcenter for resolving your dependencies.
	jcenter()
	// Work around for sikulixapi
	maven{
		url "http://labs.consol.de/maven/repository/"
	}
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.10.2'
}

// Copy all dependencies api into output/lib folder. This is used for testNG
task copyToLib(type: Copy) {
    into "$buildDir/output/lib"
    from configurations.testRuntime
}

task setupProject {
    dependsOn 'clean'
    dependsOn 'build'
    dependsOn 'copyToLib'
    tasks.findByName('build').mustRunAfter 'clean'
    tasks.findByName('copyToLib').mustRunAfter 'build'
}

task demoTestSuite (type: Test) { //this is the gradle task to be executed
  useTestNG() { //Tells Gradle to use TestNG
       suiteXmlFiles << new File("test-suite/demoDataDrivenTestSuite.xml")  //location of our suite.xml
  }
}
